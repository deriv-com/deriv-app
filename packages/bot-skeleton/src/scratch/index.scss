$black: #0e0e0e;
$colour_numPadBackground: $black;
$colour_numPadBorder: $black;
$colour_text: $black;
$colour_numPadActiveBackground: $black;
$colour_scrollbarHover: $black;
$colour_scrollbar: $black;
$colour_flyout: $black;
$colour_toolbox: $black;
$colour_toolboxText: $black;
$colour_toolboxHover: $black;
$colour_toolboxSelected: $black;

.theme--dark {
    .blocklyDropDownDiv {
        background-color: rgb(194, 194, 194) !important;
        border-color: rgb(194, 194, 194) !important;
    }
    .zelos-renderer.zelos_renderer-theme .blocklyMainBackground,
    .load-strategy__container .blocklyMainBackground,
    .zelos-renderer.zelos_renderer-theme rect.blocklyFieldRect.blocklyDropdownRect,
    .zelos-renderer.zelos_renderer-theme .blocklyNonEditableText > rect:not(.blocklyDropdownRect),
    .zelos-renderer.zelos_renderer-theme .blocklyEditableText > rect:not(.blocklyDropdownRect),
    .blocklyPath[fill='#fff'],
    .blocklyVariableGet .blocklyPath,
    .blocklyOutlinePath {
        fill: $black !important;
    }

    .flyout rect.blocklyFieldRect.blocklyDropdownRect,
    .flyout .zelos-renderer.classic-theme .blocklyMainBackground {
        fill: #151816 !important;
    }

    .zelos-renderer.zelos_renderer-theme .blocklyEditableText > image,
    .zelos-renderer.zelos_renderer-theme .blocklyNonEditableText > image {
        filter: unset;
    }

    .flyout .zelos-renderer.classic-theme .blocklyEditableText > image {
        filter: invert(0);
    }

    .zelos-renderer.classic-theme .blocklyNonEditableText > rect:not(.blocklyDropdownRect),
    .zelos-renderer.classic-theme .blocklyEditableText > rect:not(.blocklyDropdownRect) {
        fill: unset;
    }
}

.flyout .injectionDiv {
    height: 100%;
}

.flyout .zelos-renderer.classic-theme .blocklyMainBackground {
    filter: unset;
}

.zelos-renderer.zelos_renderer-theme,
.flyout .zelos-renderer.classic-theme,
.gtm-search-results,
.load-strategy__container {
    @keyframes blinkEffect {
        0% {
            stroke: #ff0000;
            stroke-width: 5px;
        }
        50% {
            stroke: #ffff00;
            stroke-width: 8px;
        }
        100% {
            stroke: #ff0000;
            stroke-width: 5px;
        }
    }

    .block--error-highlighted > .blocklyPath {
        stroke: #ff0000;
        stroke-width: 5px;
    }

    @keyframes fade-in-out {
        0% {
            stroke-opacity: 0;
        }
        50% {
            stroke-opacity: 1;
            stroke-width: 6px;
        }
        100% {
            stroke-opacity: 0;
        }
    }

    .block--execution-highlighted > .blocklyPath {
        stroke: #89b2af;
        animation: fade-in-out 1.5s;
    }

    .block--blink > .blocklyPath {
        animation: blinkEffect 1s infinite;
    }

    .blocklySvg {
        outline: none;
        overflow: hidden; /* IE overflows by default. */
        position: absolute;
        display: block;
    }

    /* Necessary to position the drag surface */
    .blocklyRelativeWrapper {
        position: relative;
        width: 100%;
        height: 100%;
    }

    .blocklyWidgetDiv {
        display: none;
        position: absolute;
        z-index: 99999; /* big value for bootstrap3 compatibility */
    }

    .blocklyNonSelectable {
        user-select: none;
        -moz-user-select: none;
        -webkit-user-select: none;
        -ms-user-select: none;
    }

    .blocklyWidgetDiv.fieldTextInput {
        overflow: hidden;
        border: 1px solid;
        box-sizing: border-box;
        transform-origin: 0 0;
        -ms-transform-origin: 0 0;
        -moz-transform-origin: 0 0;
        -webkit-transform-origin: 0 0;
    }

    .blocklyWidgetDiv.fieldTextInput.removableTextInput {
        overflow: visible;
    }

    .blocklyTextDropDownArrow {
        position: absolute;
    }

    .blocklyTextRemoveIcon {
        position: absolute;
        width: 24px;
        height: 24px;
        top: -40px;
        left: 50%;
        margin-left: -12px;
        cursor: pointer;
    }

    .blocklyWsDragSurface {
        display: none;
        position: absolute;
        top: 0;
        left: 0;
    }

    /* Added as a separate rule with multiple classes to make it more specific
   than a bootstrap rule that selects svg:root. See issue #1275 for context.
*/
    .blocklyWsDragSurface.blocklyOverflowVisible {
        overflow: visible;
    }

    .blocklyTooltipDiv {
        min-height: 34px;
        background-color: #d6dadb;
        border-radius: 4px;
        color: #333333;
        padding: 8px;
        font-size: 12px;
        font-family: 'IBM Plex Sans', sans-serif;
        line-height: 1.5;
        letter-spacing: normal;
        position: absolute;
        z-index: 100000; /* big value for bootstrap3 compatibility */
    }

    .blocklyDropDownDiv {
        position: fixed;
        left: 0;
        top: 0;
        z-index: 1000;
        display: none;
        border: 1px solid;
        border-radius: 4px;
        box-shadow: 0px 0px 8px 1px rgba(0, 0, 0, 0.3);
        padding: 4px;
        -webkit-user-select: none;
        min-height: 15px;
    }

    .blocklyDropDownContent {
        max-height: 300px;
        overflow: auto;
    }

    .blocklyDropDownArrow {
        position: absolute;
        left: 0;
        top: 0;
        width: 16px;
        height: 16px;
        z-index: -1;
        background-color: inherit;
        border-color: inherit;
    }

    .blocklyDropDownButton {
        display: inline-block;
        float: left;
        padding: 0;
        margin: 4px;
        border-radius: 4px;
        outline: none;
        border: 1px solid;
        transition: box-shadow 0.1s;
        cursor: pointer;
    }

    .blocklyDropDownButtonHover {
        box-shadow: 0px 0px 0px 4px rgba(0, 0, 0, 0.1);
    }

    .blocklyDropDownButton:active {
        box-shadow: 0px 0px 0px 6px rgba(0, 0, 0, 0.1);
    }

    .blocklyDropDownButton > img {
        width: 80%;
        height: 80%;
        margin-top: 5%;
    }

    .blocklyDropDownPlaceholder {
        display: inline-block;
        float: left;
        padding: 0;
        margin: 4px;
    }

    .blocklyNumPadButton {
        display: inline-block;
        float: left;
        padding: 0;
        width: 48px;
        height: 48px;
        margin: 4px;
        border-radius: 4px;
        background: $colour_numPadBackground;
        color: #333333;
        outline: none;
        border: 1px solid $colour_numPadBorder;
        cursor: pointer;
        font-weight: 600;
        font-size: 12px;
        -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
    }

    .blocklyNumPadButton > img {
        margin-top: 10%;
        width: 80%;
        height: 80%;
        filter: invert(1);
    }

    .blocklyNumPadButton:active {
        background: $colour_numPadActiveBackground;
        -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
    }

    .arrowTop {
        border-top: 1px solid;
        border-left: 1px solid;
        border-top-left-radius: 4px;
        border-color: inherit;
    }

    .arrowBottom {
        border-bottom: 1px solid;
        border-right: 1px solid;
        border-bottom-right-radius: 4px;
        border-color: inherit;
    }

    .valueReportBox {
        min-width: 50px;
        max-width: 300px;
        max-height: 200px;
        overflow: auto;
        word-wrap: break-word;
        text-align: center;
        font-size: 0.8em;
    }

    .blocklyResizeSE {
        cursor: se-resize;
        fill: #aaa;
    }

    .blocklyResizeSW {
        cursor: sw-resize;
        fill: #aaa;
    }

    .blocklyResizeLine {
        stroke: #888;
        stroke-width: 1;
    }

    .blocklyHighlightedConnectionPath {
        fill: none;
        stroke: #fc3;
        stroke-width: 4px;
    }

    .blocklyPath {
        stroke-width: 0.4px;
    }

    .blocklySelected > .blocklyPath {
        stroke: #ffc358;
        stroke-width: 3px;
    }

    .blocklySelected > .blocklyPathLight {
        display: none;
    }

    .blocklyDraggable {
        cursor: grab;
        cursor: -webkit-grab;
        cursor: -moz-grab;
        image[alt='Collapsed'] {
            transform: translate(7px);
        }
    }

    .blocklyDragging {
        cursor: grabbing;
        cursor: -webkit-grabbing;
        cursor: -moz-grabbing;
    }

    .blocklyDraggable:active,
    .blocklyBlockDragSurface .blocklyDraggable {
        cursor: grabbing;
        cursor: -webkit-grabbing;
        cursor: -moz-grabbing;
    }

    .blocklyDragging.blocklyDraggingDelete {
        cursor: url('<<<PATH>>>/handdelete.cur'), auto;
    }

    .blocklyDragging.blocklyDraggingMouseThrough {
        pointer-events: none;
    }

    .blocklyToolboxDelete {
        cursor: url('<<<PATH>>>/handdelete.cur'), auto;
    }

    .blocklyToolboxGrab {
        cursor: grabbing;
        cursor: -webkit-grabbing;
    }

    .blocklyDragging > .blocklyPath,
    .blocklyDragging > .blocklyPathLight {
        fill-opacity: 1;
        stroke-opacity: 1;
    }

    .blocklyDisabled > .blocklyPath {
        fill-opacity: 0.5;
        stroke-opacity: 0.5;
    }

    .blocklyInsertionMarker > .blocklyPath {
        stroke: none;
    }

    .blocklyText {
        fill: #333333;
        font-family: inherit;
        font-size: 1.63rem;
        font-weight: normal;
        font-stretch: normal;
        font-style: normal;
        line-height: 1.5;
        letter-spacing: normal;
    }

    .blocklyTextTruncated {
        font-size: 11px;
    }

    .blocklyNonEditableText > text {
        pointer-events: none;
    }

    .blocklyNonEditableText > text,
    .blocklyEditableText > text {
        fill: var(--text-prominent);
    }

    .blocklyEditableText > .blocklyEditableLabel {
        fill: var(--text-prominent);
    }

    .blocklyNonEditableText > image,
    .blocklyEditableText > image {
        filter: invert(1);
    }

    .blocklyDropdownText {
        fill: var(--text-prominent) !important;
        font-size: 1.6rem;
    }

    .blocklyBubbleText {
        fill: $colour_text;
    }

    .blocklyFlyout {
        position: absolute;
        z-index: 20;
    }

    .blocklyFlyoutButton {
        fill: none;
        pointer-events: all;
    }

    .blocklyFlyoutButtonBackground {
        stroke: #c6c6c6;
    }

    .blocklyFlyoutButton .blocklyText {
        fill: $colour_text;
    }

    .blocklyFlyoutButtonShadow {
        fill: transparent;
    }

    .blocklyFlyoutButton:hover {
        fill: #ffffff;
        cursor: pointer;
    }

    .blocklyFlyoutLabel {
        cursor: default;
    }

    .blocklyFlyoutLabelBackground {
        opacity: 0;
    }

    .blocklyFlyoutLabelText {
        font-size: 14px;
        fill: #575e75;
        font-weight: bold;
    }

    /*
Don't allow users to select text.  It gets annoying when trying to
drag a block and selected text moves instead.
*/
    .blocklySvg text,
    .blocklyBlockDragSurface text,
    .blocklyFlyout text,
    .blocklyToolboxDiv text {
        user-select: none;
        -moz-user-select: none;
        -webkit-user-select: none;
        cursor: inherit;
    }

    .blocklyHidden {
        display: none;
    }

    .blocklyFieldDropdown:not(.blocklyHidden) {
        display: block;
    }

    .blocklyIconGroup {
        cursor: default;
    }

    .blocklyIconGroup:not(:hover),
    .blocklyIconGroupReadonly {
        opacity: 0.6;
    }

    .blocklyIconShape {
        fill: #00f;
        stroke: #fff;
        stroke-width: 1px;
    }

    .blocklyIconSymbol {
        fill: #fff;
    }

    .blocklyMinimalBody {
        margin: 0;
        padding: 0;
    }

    .blocklyCommentForeignObject {
        position: relative;
        z-index: 0;
    }

    .blocklyCommentRect {
        fill: #e7de8e;
        stroke: #bca903;
        stroke-width: 1px;
    }

    .blocklyCommentTarget {
        fill: transparent;
        stroke: #bca903;
    }

    .blocklyCommentTargetFocused {
        fill: none;
    }

    .blocklyCommentHandleTarget {
        fill: none;
    }

    .blocklyCommentHandleTargetFocused {
        fill: transparent;
    }

    .blocklyFocused > .blocklyCommentRect {
        fill: #b9b272;
        stroke: #b9b272;
    }

    .blocklySelected > .blocklyCommentTarget {
        stroke: #fc3;
        stroke-width: 3px;
    }

    .blocklyCommentTextarea {
        background-color: #fef49c;
        border: 0;
        outline: 0;
        margin: 0;
        padding: 3px;
        resize: none;
        display: block;
        overflow: hidden;
    }

    .blocklyCommentDeleteIcon {
        cursor: pointer;
        fill: #000;
        display: none;
    }

    .blocklySelected > .blocklyCommentDeleteIcon {
        display: block;
    }

    .blocklyDeleteIconShape {
        fill: #000;
        stroke: #000;
        stroke-width: 1px;
    }

    .blocklyDeleteIconShape.blocklyDeleteIconHighlighted {
        stroke: #fc3;
    }

    .scratchCommentForeignObject {
        position: relative;
    }

    .scratchCommentBody {
        background-color: #fef49c;
        border-radius: 4px;
    }

    .scratchCommentRect {
        fill: #fef49c;
    }

    .scratchCommentTarget {
        fill: transparent;
    }

    .scratchWorkspaceCommentBorder {
        stroke: #bca903;
        stroke-width: 1px;
    }

    .scratchCommentTargetFocused {
        fill: none;
    }

    .scratchCommentTopBar {
        fill: #000000;
        fill-opacity: 0.1;
    }

    .scratchCommentText {
        font-size: 12px;
        font-weight: 400;
    }

    .scratchCommentTextarea {
        background-color: #fef49c;
        border: 0;
        outline: 0;
        padding: 0;
        resize: none;
        overflow: hidden;
    }

    .scratchCommentResizeSE {
        cursor: se-resize;
        fill: transparent;
    }

    .scratchCommentResizeSW {
        cursor: sw-resize;
        fill: transparent;
    }

    .blocklyHtmlInput {
        border: none;
        font-size: 12px;
        height: 100%;
        margin: 0;
        outline: none;
        box-sizing: border-box;
        width: 100%;
        text-align: center;
        font-weight: 500;
    }

    .blocklyMainBackground {
        stroke-width: 0;
        fill: #fff;
    }

    .blocklyMutatorBackground {
        fill: #fff;
        stroke: #fff;
        stroke-width: 1;
    }

    .blocklyFlyoutBackground {
        fill: $colour_flyout;
        fill-opacity: 0.8;
    }

    .blocklyMainWorkspaceScrollbar {
        z-index: 20;
    }

    .blocklyFlyoutScrollbar {
        z-index: 30;
    }

    .blocklyScrollbarHorizontal,
    .blocklyScrollbarVertical {
        position: absolute;
        outline: none;
    }

    .blocklyScrollbarBackground {
        opacity: 0;
    }

    .blocklyScrollbarHandle {
        fill: $colour_scrollbar;
    }

    .blocklyScrollbarBackground:hover + .blocklyScrollbarHandle,
    .blocklyScrollbarHandle:hover {
        fill: $colour_scrollbarHover;
    }

    .blocklyZoom > image {
        opacity: 1;
    }

    .blocklyFlyout .blocklyScrollbarHandle {
        fill: #bbb;
    }

    .blocklyFlyout .blocklyScrollbarBackground:hover + .blocklyScrollbarHandle,
    .blocklyFlyout .blocklyScrollbarHandle:hover {
        fill: #aaa;
    }

    .blocklyInvalidInput {
        background: #faa;
    }

    .blocklyAngleCircle {
        stroke: #3373cc;
        stroke-width: 1;
        fill: #4280d7;
    }

    .blocklyAngleCenterPoint {
        stroke: #fff;
        stroke-width: 1;
        fill: #fff;
    }

    .blocklyAngleDragHandle {
        stroke: #fff;
        stroke-width: 5;
        stroke-opacity: 0.25;
        fill: #fff;
        cursor: pointer;
    }

    .blocklyAngleDragArrow {
        pointer-events: none;
    }

    .blocklyAngleMarks {
        stroke: #fff;
        stroke-width: 1;
        stroke-opacity: 0.5;
    }

    .blocklyAngleGauge {
        fill: #fff;
        fill-opacity: 0.2;
    }

    .blocklyAngleLine {
        stroke: #fff;
        stroke-width: 1;
        stroke-linecap: round;
        pointer-events: none;
    }

    .blocklyContextMenu {
        border-radius: 4px;
        max-height: 100%;
        min-width: 20rem;
    }

    .blocklyDropdownMenu {
        padding: 0 !important;
    }

    .blocklyDropDownNumPad {
        background-color: $colour_numPadBackground;
    }

    /* Override the default Closure URL. */
    .blocklyWidgetDiv .goog-option-selected .goog-menuitem-checkbox,
    .blocklyWidgetDiv .goog-option-selected .goog-menuitem-icon {
        background: url('<<<PATH>>>/sprites.png') no-repeat -48px -16px !important;
    }

    /* Category tree in Toolbox. */
    .blocklyToolboxDiv {
        background-color: $colour_toolbox;
        color: $colour_toolboxText;
        overflow-x: visible;
        overflow-y: auto;
        position: absolute;
        z-index: 40; /* so blocks go over toolbox when dragging */
        -webkit-tap-highlight-color: transparent; /* issue #1345 */
    }

    .blocklyTreeRoot {
        padding: 4px 0;
    }

    .blocklyTreeRoot:focus {
        outline: none;
    }

    .blocklyTreeRow {
        height: 22px;
        line-height: 22px;
        margin-bottom: 3px;
        padding-right: 8px;
        white-space: nowrap;
    }

    .blocklyHorizontalTree {
        float: left;
        margin: 1px 5px 8px 0;
    }

    .blocklyHorizontalTreeRtl {
        float: right;
        margin: 1px 0 8px 5px;
    }

    .blocklyToolboxDiv[dir='RTL'] .blocklyTreeRow {
        margin-left: 8px;
    }

    .blocklyTreeRow:not(.blocklyTreeSelected):hover {
        background-color: #e4e4e4;
    }

    .blocklyTreeSeparator {
        border-bottom: solid #e5e5e5 1px;
        height: 0;
        margin: 5px 0;
    }

    .blocklyTreeSeparatorHorizontal {
        border-right: solid #e5e5e5 1px;
        width: 0;
        padding: 5px 0;
        margin: 0 5px;
    }

    .blocklyTreeIcon {
        background-image: url('<<<PATH>>>/sprites.png');
        height: 16px;
        vertical-align: middle;
        width: 16px;
    }

    .blocklyTreeIconClosedLtr {
        background-position: -32px -1px;
    }

    .blocklyTreeIconClosedRtl {
        background-position: 0px -1px;
    }

    .blocklyTreeIconOpen {
        background-position: -16px -1px;
    }

    .blocklyTreeSelected > .blocklyTreeIconClosedLtr {
        background-position: -32px -17px;
    }

    .blocklyTreeSelected > .blocklyTreeIconClosedRtl {
        background-position: 0px -17px;
    }

    .blocklyTreeSelected > .blocklyTreeIconOpen {
        background-position: -16px -17px;
    }

    .blocklyTreeIconNone,
    .blocklyTreeSelected > .blocklyTreeIconNone {
        background-position: -48px -1px;
    }

    .blocklyTreeLabel {
        cursor: default;
        font-size: 16px;
        padding: 0 3px;
        vertical-align: middle;
    }

    .blocklyToolboxDelete .blocklyTreeLabel {
        cursor: url('<<<PATH>>>/handdelete.cur'), auto;
    }

    .blocklyTreeSelected .blocklyTreeLabel {
        color: #fff;
    }

    .blocklyDropDownDiv .goog-slider-horizontal {
        margin: 8px;
        height: 22px;
        width: 150px;
        position: relative;
        outline: none;
        border-radius: 11px;
        margin-bottom: 20px;
    }

    .blocklyDropDownDiv .goog-slider-horizontal .goog-slider-thumb {
        width: 26px;
        height: 26px;
        top: -1px;
        position: absolute;
        background-color: #ffffff;
        border-radius: 100%;
        -webkit-box-shadow: 0 0 0 4px rgba(0, 0, 0, 0.15);
        -moz-box-shadow: 0 0 0 4px rgba(0, 0, 0, 0.15);
        box-shadow: 0 0 0 4px rgba(0, 0, 0, 0.15);
    }

    .scratchEyedropper {
        background: none;
        outline: none;
        border: none;
        width: 100%;
        text-align: center;
        border-top: 1px solid #ddd;
        padding-top: 5px;
        cursor: pointer;
    }

    .scratchColourPickerLabel {
        font-size: 0.65rem;
        color: $colour_toolboxText;
        margin: 8px;
    }

    .scratchColourPickerLabelText {
        font-weight: bold;
    }

    .scratchColourPickerReadout {
        margin-left: 10px;
    }

    .scratchMatrixButtonDiv {
        width: 50%;
        text-align: center;
        float: left;
    }

    .scratchNotePickerKeyLabel {
        font-size: 0.75rem;
        fill: $colour_text;
        pointer-events: none;
    }

    .blocklyWidgetDiv .goog-menu {
        background: #fff;
        border-color: #ccc #666 #666 #ccc;
        border-style: solid;
        border-width: 1px;
        cursor: default;
        font: normal 13px 'Helvetica Neue', sans-serif;
        margin: 0;
        outline: none;
        padding: 4px 0;
        position: absolute;
        overflow-y: auto;
        overflow-x: hidden;
        z-index: 20000;
    }

    .blocklyDropDownDiv .goog-menu {
        cursor: default;
        font: normal 13px 'Helvetica Neue', sans-serif;
        outline: none;
        z-index: 20000;
    }

    .blocklyWidgetDiv .goog-menuitem {
        color: #000;
        font: normal 13px 'Helvetica Neue', sans-serif;
        list-style: none;
        margin: 0;
        padding: 4px 7em 4px 28px;
        white-space: nowrap;
    }

    .blocklyDropDownDiv .goog-menuitem {
        color: #333333;
        font: normal 13px 'Helvetica Neue', sans-serif;
        font-weight: bold;
        list-style: none;
        margin: 0;
        min-height: 24px;
        padding: 4px 7em 4px 28px;
        white-space: nowrap;
    }

    .blocklyWidgetDiv .goog-menu-nocheckbox .goog-menuitem,
    .blocklyWidgetDiv .goog-menu-noicon .goog-menuitem,
    .blocklyDropDownDiv .goog-menu-nocheckbox .goog-menuitem,
    .blocklyDropDownDiv .goog-menu-noicon .goog-menuitem {
        padding-left: 12px;
    }

    .blocklyWidgetDiv .goog-menu-noaccel .goog-menuitem,
    .blocklyDropDownDiv .goog-menu-noaccel .goog-menuitem {
        padding-right: 20px;
    }

    .blocklyWidgetDiv .goog-menuitem-content,
    .blocklyDropDownDiv .goog-menuitem-content {
        color: #000;
        font: normal 13px 'Helvetica Neue', sans-serif;
    }
    .blocklyMenuItemContent.goog-menuitem-content {
        color: #000;
    }
    .blocklyDropDownContent .blocklyMenuItemContent.goog-menuitem-content {
        font-weight: bold;
    }
    .blocklyCheckbox {
        width: 16px;
        height: 16px;
        y: 7;
        x: 2;
    }

    .header__title {
        color: var(--text-prominent);
        display: inline-block;
        font-weight: 700;
    }

    .blocklyWidgetDiv .goog-menuitem-disabled .goog-menuitem-accel,
    .blocklyWidgetDiv .goog-menuitem-disabled .goog-menuitem-content,
    .blocklyDropDownDiv .goog-menuitem-disabled .goog-menuitem-accel,
    .blocklyDropDownDiv .goog-menuitem-disabled .goog-menuitem-content {
        color: #ccc !important;
    }

    .blocklyWidgetDiv .goog-menuitem-disabled .goog-menuitem-icon,
    .blocklyDropDownDiv .goog-menuitem-disabled .goog-menuitem-icon {
        opacity: 0.3;
        -moz-opacity: 0.3;
        filter: alpha(opacity=30);
    }

    .blocklyWidgetDiv .goog-menuitem-highlight,
    .blocklyWidgetDiv .goog-menuitem-hover {
        background-color: #d6e9f8;
        border-color: #d6e9f8;
        border-style: dotted;
        border-width: 1px 0;
        padding-bottom: 3px;
        padding-top: 3px;
    }

    .blocklyDropDownDiv .goog-menuitem-highlight,
    .blocklyDropDownDiv .goog-menuitem-hover {
        background-color: rgba(0, 0, 0, 0.2);
    }

    .blocklyWidgetDiv .goog-menuitem-checkbox,
    .blocklyWidgetDiv .goog-menuitem-icon,
    .blocklyDropDownDiv .goog-menuitem-checkbox,
    .blocklyDropDownDiv .goog-menuitem-icon {
        background-repeat: no-repeat;
        height: 16px;
        left: 6px;
        position: absolute;
        right: auto;
        vertical-align: middle;
        width: 16px;
    }

    .blocklyWidgetDiv .goog-option-selected .goog-menuitem-checkbox,
    .blocklyWidgetDiv .goog-option-selected .goog-menuitem-icon,
    .blocklyDropDownDiv .goog-option-selected .goog-menuitem-checkbox,
    .blocklyDropDownDiv .goog-option-selected .goog-menuitem-icon {
        background: url('<<<PATH>>>/sprites.png') no-repeat -48px -16px !important;
        position: static;
        float: left;
        margin-left: -24px;
    }

    .blocklyWidgetDiv .goog-menuitem-rtl .goog-menuitem-checkbox,
    .blocklyWidgetDiv .goog-menuitem-rtl .goog-menuitem-icon,
    .blocklyDropDownDiv .goog-menuitem-rtl .goog-menuitem-checkbox,
    .blocklyDropDownDiv .goog-menuitem-rtl .goog-menuitem-icon {
        float: right;
        margin-right: -24px;
    }

    .blocklyWidgetDiv .goog-menuitem-accel,
    .blocklyDropDownDiv .goog-menuitem-accel {
        color: #999;
        direction: ltr;
        left: auto;
        padding: 0 6px;
        position: absolute;
        right: 0;
        text-align: right;
    }

    .blocklyWidgetDiv .goog-menuitem-rtl .goog-menuitem-accel,
    .blocklyDropDownDiv .goog-menuitem-rtl .goog-menuitem-accel {
        left: 0;
        right: auto;
        text-align: left;
    }

    .blocklyWidgetDiv .goog-menuitem-mnemonic-hint,
    .blocklyDropDownDiv .goog-menuitem-mnemonic-hint {
        text-decoration: underline;
    }

    .blocklyWidgetDiv .goog-menuitem-mnemonic-separator,
    .blocklyDropDownDiv .goog-menuitem-mnemonic-separator {
        color: #999;
        font-size: 12px;
        padding-left: 4px;
    }

    .blocklyWidgetDiv .goog-menuseparator,
    .blocklyDropDownDiv .goog-menuseparator {
        border-top: 1px solid #ccc;
        margin: 4px 0;
        padding: 0;
    }

    .blocklyFlyoutCheckbox {
        fill: #ffffff;
        stroke: #c8c8c8;
    }

    .blocklyFlyoutCheckbox.checked {
        fill: #4c97ff;
        stroke: #3373cc;
    }

    .blocklyFlyoutCheckboxPath {
        stroke: #ffffff;
        stroke-width: 3;
        stroke-linecap: round;
        stroke-linejoin: round;
    }

    .scratchCategoryMenu {
        width: 60px;
        background: $colour_toolbox;
        color: $colour_toolboxText;
        font-size: 0.7rem;
        user-select: none;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
    }

    .scratchCategoryMenuHorizontal {
        width: 100%;
        height: 50px;
        background: $colour_toolbox;
        color: $colour_toolboxText;
        font-size: 0.7em;
        user-select: none;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
    }

    .scratchCategoryMenuHorizontal .scratchCategoryMenuRow {
        float: left;
        margin: 3px;
    }

    .scratchCategoryMenuItem {
        padding: 0.375rem 0px;
        cursor: pointer;
        text-align: center;
    }

    .scratchCategoryMenuHorizontal .scratchCategoryMenuItem {
        padding: 6px 5px;
    }

    .scratchCategoryMenuItem.categorySelected {
        background: $colour_toolboxSelected;
    }

    .scratchCategoryItemBubble {
        width: 1.25rem;
        height: 1.25rem;
        border: 1px solid;
        border-radius: 100%;
        margin: 0 auto 0.125rem;
    }

    .scratchCategoryItemIcon {
        width: 1.25rem;
        height: 1.25rem;
        margin: 0 auto 0.125rem;
        background-size: 100%;
    }

    .scratchCategoryMenuItem:hover {
        color: $colour_toolboxHover !important;
    }

    rect.blocklyFieldRect.blocklyDropdownRect {
        fill: #ffffff;
        rx: 16px;
        ry: 16px;
    }

    .blocklyTextRootBlockHeader {
        width: 17rem !important;
        color: #fff;
        fill: #ffffff;
        font-size: 1.9rem;
    }

    .blocklyTextTickAnalysis {
        fill: #ffffff;
        font-size: 1.6rem;
    }
}

.blocklyNonEditableText:has(> .blocklyCheckbox) .blocklyFieldRect,
.blocklyEditableText:has(> .blocklyCheckbox) .blocklyFieldRect {
    width: 16px;
    height: 16px;
    y: 7;
    x: 2;
}
